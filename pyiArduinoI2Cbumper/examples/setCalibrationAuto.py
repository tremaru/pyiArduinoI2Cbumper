# Пример автоматической калибровки бампера:

#  Автоматическая калибровка состоит из 2 этапов:
#  Запуск     калибровки функцией setCalibrationRun() - при этом модуль считывает показания датчиков над линией.
#  Завершение калибровки функцией setCalibrationEnd() - при этом модуль считывает показания датчиков над фоном.
#  Калибровка считается успешно завершённой, если обе функции вернули true.
#
#  ПРИМЕЧАНИЕ:
#  Выполнение каждой функции (setCalibrationRun/setCalibrationEnd), занимает до 5 секунд.
#  Все датчики модуля должны находиться над линией (для первой функции), или над фоном (для второй функции)
#  с момента обращения к функции и до момента возвращения ей результата.

from time import sleep

#   Подключаем библиотеку для работы с бампером I2C-flash.
from pyiArduinoI2Cbumper import *
#   Объявляем объект bum для работы с функциями и методами библиотеки pyiArduinoI2Cbumper, указывая адрес модуля на шине I2C.
bum = pyiArduinoI2Cbumper(0x09)

print("Установите бампер над линией трассы")
print("У Вас есть 5 секунд...\r\n")

sleep(5)
print("Запускаем калибровку.")
print("Ждите...\r\n")

#   Запускаем калибровку.
f = bum.setCalibrationRun()

if f == True:
    print("Линия считана!")
else:
    print("Ошибка!.")
    exit()

print("------------")
sleep(1)
print("Установите бампер над фоном трассы")
print("У Вас есть 5 секунд...\r\n")

sleep(5)
print("Завершаем калибровку.")
print("Ждите...\r\n")

#   Завершаем калибровку.
f = bum.setCalibrationEnd()

if f == True:
    print("Фон считан!")
else:
    print("Ошибка!.")
    exit()

print("------------")
sleep(1)
print("Калибровка успешно завершена!")

# Получаем тип линии.
if bum.getLineType() == BUM_LINE_BLACK:
    line = " тёмной линией на светлом фоне."
else:
    line = "о светлой линией на тёмном фоне."

print(
    "Бампер откалиброван для трассы с {}"
    "".format(line)
    )
print("============")

