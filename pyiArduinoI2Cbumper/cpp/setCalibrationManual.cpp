// Пример ручной калибровки бампера:                       // * Строки со звёздочкой являются необязательными.
                                                           //
#include "Serial.h"
#include "../iarduino_I2C_Bumper.h"                        //   Подключаем библиотеку для работы с бампером I2C-flash.
iarduino_I2C_Bumper bum(0x09);                             //   Объявляем объект bum для работы с функциями и методами библиотеки iarduino_I2C_Bumper, указывая адрес модуля на шине I2C.
                                                           //   Если объявить объект без указания адреса (iarduino_I2C_Bumper bum;), то адрес будет найден автоматически.
int main(){                                                //
    delay(500);                                            // * Ждём завершение переходных процессов связанных с подачей питания.
    Serial.begin(9600);                                    //   Инициируем передачу данных в монитор последовательного порта на скорости 9600 бит/сек.
    while(!Serial){;}                                      // * Ждём завершения инициализации шины UART.
    bool f;                                                //   Объявляем флаг для отслеживания результата калибровки.
    bum.begin();                                           //   Инициируем работу с бампером.
//  КАЛИБРУЕМ МОДУЛЬ:                                      //
    f=bum.setCalibrationManual(700);                       //   Выполняем калибровку указав значение АЦП между фоном и линией для всех датчиков модуля.
    if(f){Serial.println("Модуль успешно откалиброван!");} //   Если калибровка выполнена (f==true), то выводим текст.
    else {Serial.println("Ошибка калибровки модуля!"   );} //   Иначе, выводим сообщение об ошибке.
//  ЗАДАЁМ ТИП ЛИНИИ ТРАССЫ:                               //
    f=bum.setLineType(BUM_LINE_BLACK);                     // * Указываем тип линии трассы: BUM_LINE_BLACK - тёмная / BUM_LINE_WHITE - светлая / BUM_LINE_CHANGE - сменить тип линии.
    if(f){Serial.println("Тип линии трассы задан!"     );} // * Если тип линии принят модулем (f==true), то выводим текст.
    else {Serial.println("Ошибка указания типа линии!" );} // * Иначе, выводим сообщение об ошибке.
}                                                          //
/*  Калибровка заключается в определении среднего значения АЦП снятого с датчика находящегося над фоном и над линией.
 *  При успешной калибровке, данные значения сохраняются для каждого датчика в энергонезависимой памяти модуля.
 *  Далее, модуль определяет наличие линий под датчиками, сравнивая среднее значение АЦП с текущими показаниями АЦП своих датчиков.
 *
 *  При автоматической калибровке модуль сначала считывает показания АЦП с датчиков находящихся над линиями, а потом над фоном,
 *  самостоятельно рассчитывает среднее значение АЦП для каждого датчика и сохраняет полученные данные в своей памяти.
 *
 *  При ручной калибровке Вы сами рассчитываете средние значения АЦП для каждого датчика и отправляете их модулю функцией setCalibrationManual().
 *  Для самостоятельного рассчёта среднего значения АЦП, нужно знать значения АЦП для линии и фона. Узнать текущее значение АЦП любого датчика можно функцией getLineAnalog().
 *
 *  Если Вы желаете указать одно среднее значение АЦП для всех датчиков модуля, то обратитесь к функции setCalibrationManual() указав одно значение.
 *  Если Вы желаете указать среднее значение АЦП для каждого датчика модуля, то обратитесь к функции setCalibrationManual() указав девять значений.
 *
 *  setCalibrationManual(АЦП для всех датчивов модуля);
 *  setCalibrationManual(АЦП 1 датчика, АЦП 2 датчика, АЦП 3 датчика, АЦП 4 датчика, АЦП 5 датчика, АЦП 6 датчика, АЦП 7 датчика, АЦП 8 датчика, АЦП 9 датчика);
 */
